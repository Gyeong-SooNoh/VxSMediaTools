!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALIGN16	dxt.h	66;"	d
ALIGN16	dxt.h	68;"	d
AddRef	dxtstipsender.cpp	/^	virtual ULONG		AddRef (void) {$/;"	f	class:VideoDelegate
BITMAP4	yuvutil.h	/^} BITMAP4;$/;"	t	typeref:struct:__anon1
BLOCK	STIP.h	44;"	d
BLOCK_SIZE	STIP.h	43;"	d
C565_5_MASK	dxt.h	54;"	d
C565_6_MASK	dxt.h	55;"	d
ColorDistance	dxt.cpp	/^int ColorDistance( const byte *c1, const byte *c2 )$/;"	f
ColorLuminance	dxt.cpp	/^int ColorLuminance( const byte *color )$/;"	f
ColorTo565	dxt.cpp	/^word ColorTo565( const byte *color )$/;"	f
CompressDXT	libdxt.cpp	/^int CompressDXT(const byte *in, byte *out, int width, int height, int format, int numthreads)$/;"	f
CompressImageDXT1	dxt.cpp	/^void CompressImageDXT1( const byte *inBuf, byte *outBuf,$/;"	f
CompressImageDXT5	dxt.cpp	/^void CompressImageDXT5( const byte *inBuf, byte *outBuf, int width, int height,$/;"	f
CompressImageDXT5YCoCg	dxt.cpp	/^void CompressImageDXT5YCoCg( const byte *inBuf, byte *outBuf, int width, int height,$/;"	f
ComputeError	dxt.cpp	/^double ComputeError( const byte *original, const byte *dxt, int width, int height)$/;"	f
Convert422toFlippedRGBA	yuvutil.cpp	/^Convert422toFlippedRGBA(void *PixelFrame, byte **rgba, int width, int height)$/;"	f
Convert422toRGBA	yuvutil.cpp	/^Convert422toRGBA(void *PixelFrame, byte **rgba, int width, int height)$/;"	f
DATA_PATH_H	util.h	101;"	d
DXT1	STIP.h	38;"	d
DXT1A	STIP.h	39;"	d
DXT5	STIP.h	40;"	d
DXT_INTR	dxt.cpp	46;"	d	file:
EmitAlphaIndices	dxt.cpp	/^void EmitAlphaIndices( const byte *colorBlock, const byte minAlpha, const byte maxAlpha, byte *&outData )$/;"	f
EmitAlphaIndicesFast	dxt.cpp	/^void EmitAlphaIndicesFast( const byte *colorBlock, const byte minAlpha, const byte maxAlpha, byte *&outData )$/;"	f
EmitAlphaIndices_Intrinsics	intrinsic.cpp	/^void EmitAlphaIndices_Intrinsics( const byte *colorBlock, const byte minAlpha, const byte maxAlpha, byte *&outData)$/;"	f
EmitByte	dxt.cpp	/^void EmitByte( byte b, byte *&outData)$/;"	f
EmitColorIndices	dxt.cpp	/^void EmitColorIndices( const byte *colorBlock, const byte *minColor, const byte *maxColor, byte *&outData )$/;"	f
EmitColorIndicesFast	dxt.cpp	/^void EmitColorIndicesFast( const byte *colorBlock, const byte *minColor, const byte *maxColor, byte *&outData )$/;"	f
EmitColorIndices_Intrinsics	intrinsic.cpp	/^void EmitColorIndices_Intrinsics( const byte *colorBlock, const byte *minColor, const byte *maxColor, byte *&outData )$/;"	f
EmitDoubleWord	dxt.cpp	/^void EmitDoubleWord( dword i, byte *&outData)$/;"	f
EmitWord	dxt.cpp	/^void EmitWord( word s, byte *&outData)$/;"	f
ExtractBlock	dxt.cpp	/^void ExtractBlock( const byte *inPtr, int width, byte *colorBlock )$/;"	f
ExtractBlock_Intrinsics	intrinsic.cpp	/^void ExtractBlock_Intrinsics( const byte *inPtr, int width, byte *colorBlock )$/;"	f
FORMAT_DXT1	libdxt.h	42;"	d
FORMAT_DXT5	libdxt.h	43;"	d
FORMAT_DXT5YCOCG	libdxt.h	44;"	d
GetFrameSize	dxtstipsender.cpp	/^GetFrameSize(int card, int mode, int *winWidth, int *winHeight)$/;"	f
GetMinMaxColors	dxt.cpp	/^void GetMinMaxColors( const byte *colorBlock, byte *minColor, byte *maxColor )$/;"	f
GetMinMaxColorsAlpha	dxt.cpp	/^void GetMinMaxColorsAlpha(  byte *colorBlock, byte *minColor, byte *maxColor )$/;"	f
GetMinMaxColorsByBBox	dxt.cpp	/^void GetMinMaxColorsByBBox( const byte *colorBlock, byte *minColor, byte *maxColor )$/;"	f
GetMinMaxColorsByLuminance	dxt.cpp	/^void GetMinMaxColorsByLuminance( const byte *colorBlock, byte *minColor, byte *maxColor )$/;"	f
GetMinMaxColors_Intrinsics	intrinsic.cpp	/^void GetMinMaxColors_Intrinsics( const byte *colorBlock, byte *minColor, byte *maxColor )$/;"	f
H263	STIP.h	34;"	d
H264	STIP.h	35;"	d
INSET_SHIFT	dxt.h	57;"	d
Initialise422Converter	yuvutil.cpp	/^Initialise422Converter()$/;"	f
LUT_Convert422toFlippedRGBA	yuvutil.cpp	/^LUT_Convert422toFlippedRGBA(void *PixelFrame, byte **rgba, int width, int height)$/;"	f
MAX_INT	dxt.h	60;"	d
MIN_INT	dxt.h	61;"	d
MPEG2PS	STIP.h	32;"	d
MPEG2TS	STIP.h	31;"	d
MPEG4	STIP.h	33;"	d
PKT_HEADER	STIP.h	42;"	d
PKT_SIZE	STIP.h	45;"	d
Packet	STIP.h	/^} Packet;$/;"	t	typeref:struct:_packet
PixelFrame	dxtstipsender.cpp	/^void *PixelFrame;$/;"	v
QueryInterface	dxtstipsender.cpp	/^	virtual HRESULT		QueryInterface (REFIID iid, LPVOID *ppv)$/;"	f	class:VideoDelegate
RGB	STIP.h	29;"	d
RGBA	STIP.h	30;"	d
RGBAtoYCoCg	dxt.cpp	/^void RGBAtoYCoCg(const byte *inBuf, byte *outBuf, int width, int height)$/;"	f
R_SHUFFLE_D	intrinsic.cpp	79;"	d	file:
Release	dxtstipsender.cpp	/^	virtual ULONG		Release (void) {$/;"	f	class:VideoDelegate
SEP_Convert422toFlippedRGBA	yuvutil.cpp	/^SEP_Convert422toFlippedRGBA(void *PixelFrame, byte **rgba, int width, int height)$/;"	f
SINGLOOP_Convert422toRGBA	yuvutil.cpp	/^SINGLOOP_Convert422toRGBA(void *PixelFrame, byte **rgba, int width, int height)$/;"	f
STIP_hdr	STIP.h	/^typedef struct _STIP_Transport_Header STIP_hdr;$/;"	t	typeref:struct:_STIP_Transport_Header
STIP_init	STIP.h	/^typedef struct _STIP_Initiation_Header STIP_init;$/;"	t	typeref:struct:_STIP_Initiation_Header
SWS_Convert422toFlippedRGBA	yuvutil.cpp	/^SWS_Convert422toFlippedRGBA(void *PixelFrame, byte **rgba, int width, int height)$/;"	f
SwapColors	dxt.cpp	/^void SwapColors( byte *c1, byte *c2 )$/;"	f
UV_to_Bitmap	yuvutil.cpp	/^UV_to_Bitmap(int y, int u, int v)$/;"	f
VideoDelegate	dxtstipsender.cpp	/^    VideoDelegate () {$/;"	f	class:VideoDelegate
VideoDelegate	dxtstipsender.cpp	/^class VideoDelegate : public IDeckLinkInputCallback$/;"	c	file:
VideoInputFormatChanged	dxtstipsender.cpp	/^        virtual HRESULT VideoInputFormatChanged(BMDVideoInputFormatChangedEvents, IDeckLinkDisplayMode*, BMDDetectedVideoInputFormatFlags)$/;"	f	class:VideoDelegate
VideoInputFrameArrived	dxtstipsender.cpp	/^HRESULT	VideoDelegate::VideoInputFrameArrived (IDeckLinkVideoInputFrame* arrivedFrame,$/;"	f	class:VideoDelegate
WIN32_LEAN_AND_MEAN	util.h	53;"	d
YUV420	STIP.h	28;"	d
YUV422	STIP.h	27;"	d
YUV444	STIP.h	26;"	d
YUVUTIL_H	yuvutil.h	2;"	d
_STIP_Initiation_Header	STIP.h	/^struct _STIP_Initiation_Header {$/;"	s
_STIP_Transport_Header	STIP.h	/^struct _STIP_Transport_Header {$/;"	s
__STIP_h__	STIP.h	2;"	d
_packet	STIP.h	/^typedef struct _packet {$/;"	s
_work_t	libdxt.cpp	/^typedef struct _work_t {$/;"	s	file:
a	yuvutil.h	/^	byte r,g,b,a;$/;"	m	struct:__anon1
b	yuvutil.h	/^	byte r,g,b,a;$/;"	m	struct:__anon1
block_num	dxtstipsender.cpp	/^unsigned int block_num, framecount=0;$/;"	v
buffer	dxtstipsender.cpp	/^unsigned *buffer;$/;"	v
byte	dxt.h	/^typedef unsigned char byte;$/;"	t
capture	dxtstipsender.cpp	/^void capture(int device, int mode, int connection)$/;"	f
data_path	util.h	/^class data_path$/;"	c
dword	dxt.h	/^typedef unsigned int dword;$/;"	t
dxt	dxtstipsender.cpp	/^byte *dxt;   $/;"	v
file_path	util.h	/^  std::string              file_path;$/;"	m	class:data_path
frame_height	STIP.h	/^	unsigned short frame_height;$/;"	m	struct:_STIP_Initiation_Header
frame_idx	STIP.h	/^	unsigned int frame_idx;$/;"	m	struct:_STIP_Transport_Header
frame_width	STIP.h	/^	unsigned short frame_width;$/;"	m	struct:_STIP_Initiation_Header
framecount	dxtstipsender.cpp	/^    int     framecount;$/;"	m	class:VideoDelegate	file:
framecount	dxtstipsender.cpp	/^unsigned int block_num, framecount=0;$/;"	v
g	yuvutil.h	/^	byte r,g,b,a;$/;"	m	struct:__anon1
hdr_len	STIP.h	/^	unsigned char hdr_len;$/;"	m	struct:_STIP_Initiation_Header
hdr_len	STIP.h	/^	unsigned char hdr_len;$/;"	m	struct:_STIP_Transport_Header
header	STIP.h	/^        STIP_hdr header;$/;"	m	struct:_packet
height	libdxt.cpp	/^	int width, height;$/;"	m	struct:_work_t	file:
in	libdxt.cpp	/^	byte *in, *out;$/;"	m	struct:_work_t	file:
lastTime	dxtstipsender.cpp	/^	double  lastTime;$/;"	m	class:VideoDelegate	file:
mRefCount	dxtstipsender.cpp	/^	int32_t mRefCount;$/;"	m	class:VideoDelegate	file:
main	dxtstipsender.cpp	/^int main (int argc, char** argv)$/;"	f
max_video_frame	STIP.h	/^	unsigned int max_video_frame;$/;"	m	struct:_STIP_Initiation_Header
memalign	libdxt.cpp	42;"	d	file:
memalign	util.h	82;"	d
memalign	util.h	90;"	d
memfree	util.h	92;"	d
memfree	util.h	94;"	d
nbb	libdxt.cpp	/^	int nbb;$/;"	m	struct:_work_t	file:
out	libdxt.cpp	/^	byte *in, *out;$/;"	m	struct:_work_t	file:
packet	dxtstipsender.cpp	/^Packet packet;$/;"	v
path	util.h	/^  std::vector<std::string> path;$/;"	m	class:data_path
path_name	util.h	/^  std::string              path_name;$/;"	m	class:data_path
payload	STIP.h	/^        char payload[PKT_SIZE];$/;"	m	struct:_packet
pblock_count	STIP.h	/^	unsigned int pblock_count;$/;"	m	struct:_STIP_Transport_Header
pblock_idx	STIP.h	/^	unsigned int pblock_idx;$/;"	m	struct:_STIP_Transport_Header
print_capabilities	dxtstipsender.cpp	/^void print_capabilities()$/;"	f
print_input_capabilities	dxtstipsender.cpp	/^void	print_input_capabilities (IDeckLink* deckLink)$/;"	f
print_input_modes	dxtstipsender.cpp	/^void print_input_modes (IDeckLink* deckLink)$/;"	f
print_output_capabilities	dxtstipsender.cpp	/^void	print_output_capabilities (IDeckLink* deckLink)$/;"	f
print_output_modes	dxtstipsender.cpp	/^void	print_output_modes (IDeckLink* deckLink)$/;"	f
proc_bpb	STIP.h	/^	unsigned short proc_bpb;$/;"	m	struct:_STIP_Initiation_Header
proc_px_height	STIP.h	/^	unsigned char proc_px_height;$/;"	m	struct:_STIP_Initiation_Header
proc_px_width	STIP.h	/^	unsigned char proc_px_width;$/;"	m	struct:_STIP_Initiation_Header
proc_video	STIP.h	/^	unsigned short proc_video;$/;"	m	struct:_STIP_Initiation_Header
r	yuvutil.h	/^	byte r,g,b,a;$/;"	m	struct:__anon1
reservered	STIP.h	/^	unsigned short reservered;$/;"	m	struct:_STIP_Initiation_Header
reservered	STIP.h	/^	unsigned short reservered;$/;"	m	struct:_STIP_Transport_Header
rgba	dxtstipsender.cpp	/^byte *rgba;$/;"	v
serveraddr	dxtstipsender.cpp	/^struct sockaddr_in serveraddr;$/;"	v	typeref:struct:sockaddr_in
slave1	libdxt.cpp	/^void *slave1(void *arg)$/;"	f
slave5	libdxt.cpp	/^void *slave5(void *arg)$/;"	f
slave5ycocg	libdxt.cpp	/^void *slave5ycocg(void *arg)$/;"	f
socket_fd	dxtstipsender.cpp	/^int socket_fd;$/;"	v
src_bpb	STIP.h	/^	unsigned short src_bpb;$/;"	m	struct:_STIP_Initiation_Header
src_px_height	STIP.h	/^	unsigned char src_px_height;$/;"	m	struct:_STIP_Initiation_Header
src_px_width	STIP.h	/^	unsigned char src_px_width;$/;"	m	struct:_STIP_Initiation_Header
src_video	STIP.h	/^	unsigned short src_video;$/;"	m	struct:_STIP_Initiation_Header
useDXT	dxtstipsender.cpp	/^int useDXT;$/;"	v
version	STIP.h	/^	unsigned char version;$/;"	m	struct:_STIP_Initiation_Header
version	STIP.h	/^	unsigned char version;$/;"	m	struct:_STIP_Transport_Header
video_fps	STIP.h	/^	unsigned short video_fps;$/;"	m	struct:_STIP_Initiation_Header
width	libdxt.cpp	/^	int width, height;$/;"	m	struct:_work_t	file:
word	dxt.h	/^typedef unsigned short word;$/;"	t
work_t	libdxt.cpp	/^} work_t;$/;"	t	typeref:struct:_work_t	file:
yuv2rgb	dxtstipsender.cpp	/^void (*yuv2rgb)(void*,byte**,int,int) = SWS_Convert422toFlippedRGBA;$/;"	v
yuvtab	yuvutil.cpp	/^BITMAP4 yuvtab[256][256][256];$/;"	v
